package com.gcit.lms.entities;

// Generated Feb 5, 2014 2:59:14 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * TblReservation generated by hbm2java
 */
@Entity
@Table(name = "tbl_reservation", catalog = "library")
public class Reservation implements java.io.Serializable {

	private ReservationId id;
	private Borrower tblBorrower;
	private LibraryBranch tblLibraryBranch;
	private Book tblBook;
	private Date reserveDate;
	private Date clearDate;

	public Reservation() {
	}

	public Reservation(ReservationId id, Borrower tblBorrower,
			LibraryBranch tblLibraryBranch, Book tblBook, Date reserveDate) {
		this.id = id;
		this.tblBorrower = tblBorrower;
		this.tblLibraryBranch = tblLibraryBranch;
		this.tblBook = tblBook;
		this.reserveDate = reserveDate;
	}

	public Reservation(ReservationId id, Borrower tblBorrower,
			LibraryBranch tblLibraryBranch, Book tblBook,
			Date reserveDate, Date clearDate) {
		this.id = id;
		this.tblBorrower = tblBorrower;
		this.tblLibraryBranch = tblLibraryBranch;
		this.tblBook = tblBook;
		this.reserveDate = reserveDate;
		this.clearDate = clearDate;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "branchId", column = @Column(name = "branchID", nullable = false)),
			@AttributeOverride(name = "bookId", column = @Column(name = "bookID", nullable = false)),
			@AttributeOverride(name = "cardNo", column = @Column(name = "cardNo", nullable = false)) })
	public ReservationId getId() {
		return this.id;
	}

	public void setId(ReservationId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cardNo", nullable = false, insertable = false, updatable = false)
	public Borrower getTblBorrower() {
		return this.tblBorrower;
	}

	public void setTblBorrower(Borrower tblBorrower) {
		this.tblBorrower = tblBorrower;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "branchID", nullable = false, insertable = false, updatable = false)
	public LibraryBranch getTblLibraryBranch() {
		return this.tblLibraryBranch;
	}

	public void setTblLibraryBranch(LibraryBranch tblLibraryBranch) {
		this.tblLibraryBranch = tblLibraryBranch;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "bookID", nullable = false, insertable = false, updatable = false)
	public Book getTblBook() {
		return this.tblBook;
	}

	public void setTblBook(Book tblBook) {
		this.tblBook = tblBook;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "reserveDate", nullable = false, length = 19)
	public Date getReserveDate() {
		return this.reserveDate;
	}

	public void setReserveDate(Date reserveDate) {
		this.reserveDate = reserveDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "clearDate", length = 19)
	public Date getClearDate() {
		return this.clearDate;
	}

	public void setClearDate(Date clearDate) {
		this.clearDate = clearDate;
	}

}
